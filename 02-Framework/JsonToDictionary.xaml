<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.in_environment="development" this:Main.in_maxRetryNumberOrchestratorInteractions="1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_dictionary" Type="OutArgument(scg:Dictionary(x:String, x:Object))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="ConteÃºdo do arquivo JSON em formato String." Name="in_stringJson" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_environment" Type="InArgument(x:String)" />
    <x:Property Name="in_maxRetryNumberOrchestratorInteractions" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:Main.in_stringJson>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:Main.in_stringJson>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1178,1762</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Web.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Convert Json to Dictionary " sap:VirtualizedContainerService.HintSize="712,1697" sap2010:WorkflowViewState.IdRef="Sequence_5">
    <Sequence.Variables>
      <Variable x:TypeArguments="njl:JToken" Name="jTokenConfig" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message (start)" sap:VirtualizedContainerService.HintSize="670,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Generating dictionary from json file.&quot;]" />
    <Assign DisplayName="Instantiate a new out dict" sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[out_Dictionary]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(of String, Object)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:DeserializeJson x:TypeArguments="njl:JToken" DisplayName="Deserialize config JSON" sap:VirtualizedContainerService.HintSize="670,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[jTokenConfig]" JsonString="[in_stringJson]" />
    <If Condition="[Not String.IsNullOrEmpty(in_environment)]" DisplayName="If environment is informed" sap:VirtualizedContainerService.HintSize="670,474" sap2010:WorkflowViewState.IdRef="If_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <TryCatch DisplayName="Try Catch - Get environment JToken" sap:VirtualizedContainerService.HintSize="438,287" sap2010:WorkflowViewState.IdRef="TryCatch_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch.Try>
            <Assign DisplayName="Get environment jToken" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_64">
              <Assign.To>
                <OutArgument x:TypeArguments="njl:JToken">[jTokenConfig]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="njl:JToken">[jTokenConfig.Item(in_environment)]</InArgument>
              </Assign.Value>
            </Assign>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                </ActivityAction.Argument>
                <Throw DisplayName="Throw SE: Environment not found " Exception="[new Exception(&quot;Environment not found in config.json&quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_18" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </If.Then>
    </If>
    <ui:ForEach x:TypeArguments="njl:JProperty" CurrentIndex="{x:Null}" DisplayName="For Each property in config" sap:VirtualizedContainerService.HintSize="670,760" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[jTokenConfig]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="njl:JProperty">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="njl:JProperty" Name="jPropertyConfig" />
          </ActivityAction.Argument>
          <Flowchart DisplayName="Flowchart - add JProperties to output dictionary " sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <av:Point x:Key="ShapeLocation">250,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">280,77.5 280,136.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID3</x:Reference>
            </Flowchart.StartNode>
            <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID3" DisplayName="JProperty Name" Expression="[jPropertyConfig.Name]" sap:VirtualizedContainerService.HintSize="90,87" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
              <FlowSwitch.Default>
                <FlowStep x:Name="__ReferenceID1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">180,346</av:Point>
                      <av:Size x:Key="ShapeSize">200,66</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Add Item to Dictionary" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[Not out_dictionary.Keys.Contains(jPropertyConfig.Name)]" DisplayName="If - Verify if the dictionary doesn't contains this key" sap:VirtualizedContainerService.HintSize="742,406" sap2010:WorkflowViewState.IdRef="If_7">
                      <If.Then>
                        <Switch x:TypeArguments="njl:JTokenType" DisplayName="Switch - Convert JObject Value based on its type" Expression="[jPropertyConfig.Value.Type]" sap:VirtualizedContainerService.HintSize="497,248" sap2010:WorkflowViewState.IdRef="Switch`1_10">
                          <Switch.Default>
                            <Assign DisplayName="Assign object without converting" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_91">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Switch.Default>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Switch x:TypeArguments="njl:JTokenType" x:Key="Array" DisplayName="Switch - If object is array" Expression="[jPropertyConfig.Value(0).Type]" sap:VirtualizedContainerService.HintSize="497,756" sap2010:WorkflowViewState.IdRef="Switch`1_9">
                            <Switch.Default>
                              <Assign DisplayName="Assign array item object without converting" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_85">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.Select(Function(item) CType(item, Object)).ToArray]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Switch.Default>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign x:Key="String" DisplayName="Assign - Array to string" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_80">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.Select(Function(item) CType(item, String)).ToArray]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="Integer" DisplayName="Assign - Array to integer" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.Select(Function(item) CType(item, Integer)).ToArray]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="Boolean" DisplayName="Assign Array to bool" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_82">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.Select(Function(item) CType(item, Boolean)).ToArray]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="Date" DisplayName="Assign Array to Date" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_83">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.Select(Function(item) CType(item, Date)).ToArray]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign x:Key="Float" DisplayName="Assign Array to float" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_84">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.Select(Function(item) CType(item, Decimal)).ToArray]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Switch>
                          <Assign x:Key="String" DisplayName="Assign - Convert to string" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_86">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[jPropertyConfig.Value.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="Integer" DisplayName=" Assign - Convert to integer" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CType(jPropertyConfig.Value, Integer)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="Float" DisplayName="Assign - Convert to Float" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CType(jPropertyConfig.Value, Decimal)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="Boolean" DisplayName="Assign - Convert to bool" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CType(jPropertyConfig.Value, Boolean)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign x:Key="Date" DisplayName="Assign - Convert to Date" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[out_dictionary(jPropertyConfig.Name)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[CType(jPropertyConfig.Value, Date)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Switch>
                      </If.Then>
                      <If.Else>
                        <Throw DisplayName="Throw: Duplicate Key" Exception="[new Exception(&quot;Key already exist on dictionary. Key: &quot; + jPropertyConfig.Path )]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_11" />
                      </If.Else>
                    </If>
                  </Sequence>
                </FlowStep>
              </FlowSwitch.Default>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">235,136.5</av:Point>
                  <av:Size x:Key="ShapeSize">90,87</av:Size>
                  <av:PointCollection x:Key="credentialsConnector">235,180 110,180 110,234</av:PointCollection>
                  <av:PointCollection x:Key="Default">280,223.5 280,346</av:PointCollection>
                  <av:PointCollection x:Key="assetsConnector">325,180 470,180 470,234</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <FlowStep x:Key="credentials" x:Name="__ReferenceID0">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">10,234</av:Point>
                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="njl:JProperty" CurrentIndex="{x:Null}" DisplayName="For Each - Object in credential key" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[jPropertyConfig.Values]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="njl:JProperty">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="njl:JProperty" Name="credential" />
                      </ActivityAction.Argument>
                      <If Condition="[Not out_dictionary.Keys.Contains(&quot;credentials_&quot; + credential.Name + &quot;_credentialName&quot;)]" DisplayName="If - Verify if the dictionary doesn't contains this key (credentials)" sap:VirtualizedContainerService.HintSize="683,1130" sap2010:WorkflowViewState.IdRef="If_11">
                        <If.Then>
                          <TryCatch DisplayName="Try Catch - Retrieve Credential in Orchestrator" sap:VirtualizedContainerService.HintSize="438,972" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Retrieve Credential in Orchestrator" sap:VirtualizedContainerService.HintSize="376,745" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="username" />
                                  <Variable x:TypeArguments="ss:SecureString" Name="password" />
                                  <Variable x:TypeArguments="njl:JObject" Name="jObjCredential" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Create credential jObject" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_66">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="njl:JObject">[jObjCredential]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="njl:JObject">[DirectCast(credential.Value, JObject)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:RetryScope DisplayName="Retry Scope - get Credential" sap:VirtualizedContainerService.HintSize="334,253" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="[in_maxRetryNumberOrchestratorInteractions]" RetryInterval="00:00:20">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[jObjCredential(&quot;name&quot;).ToString]" DisplayName="Get Credential - user and password" FolderPath="[jObjCredential(&quot;orchestratorFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="284,79" sap2010:WorkflowViewState.IdRef="GetRobotCredential_6" Password="[password]" Username="[username]" />
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean" />
                                  </ui:RetryScope.Condition>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:RetryScope>
                                <Assign DisplayName="Set credential name to dictionary" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_58">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[out_dictionary("credentials_" + credential.Name + "_credentialName")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[jObjCredential("name").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Set credential username to dictionary" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_59">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[out_dictionary("credentials_" + credential.Name + "_username")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[username]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Set credential password to dictionary" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_60">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[out_dictionary("credentials_" + credential.Name + "_password")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[password]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Throw DisplayName="Throw BRE: Credential not found" Exception="[new BusinessRuleException(String.Format(&quot;Could not load credential {0} during dictionary initialization.&quot;,{credential.Name}))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_16" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </If.Then>
                        <If.Else>
                          <Throw DisplayName="Throw BRE: Duplicate Key" Exception="[new BusinessRuleException(&quot;Key already exist on dictionary. Key: credentials_&quot; + credential.Name )]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_19" />
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </FlowStep>
              <FlowStep x:Key="assets" x:Name="__ReferenceID2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">370,234</av:Point>
                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ForEach x:TypeArguments="njl:JProperty" CurrentIndex="{x:Null}" DisplayName="For Each - Asset value in asset key" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[jPropertyConfig.Values]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="njl:JProperty">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="njl:JProperty" Name="asset" />
                      </ActivityAction.Argument>
                      <If Condition="[Not out_dictionary.Keys.Contains(asset.Name)]" DisplayName="If - Verify if the dictionary doesn't contains this key" sap:VirtualizedContainerService.HintSize="701,988" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Then>
                          <TryCatch DisplayName="Try Catch - Retrieve Asset in Orchestrator" sap:VirtualizedContainerService.HintSize="456,830" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Retrieve Asset in Orchestrator" sap:VirtualizedContainerService.HintSize="418,603" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="assetValue" />
                                  <Variable x:TypeArguments="njl:JObject" Name="jObjAsset" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Create asset jObject" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="njl:JObject">[jObjAsset]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="njl:JObject">[DirectCast(asset.Value, JObject)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:RetryScope DisplayName="Retry Scope - get Asset" sap:VirtualizedContainerService.HintSize="376,311" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="[in_maxRetryNumberOrchestratorInteractions]" RetryInterval="00:00:20">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[jObjAsset(&quot;name&quot;).ToString]" DisplayName="Get Asset Value" FolderPath="[jObjAsset(&quot;orchestratorFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_6">
                                        <ui:GetRobotAsset.Value>
                                          <OutArgument x:TypeArguments="x:String">[assetValue]</OutArgument>
                                        </ui:GetRobotAsset.Value>
                                      </ui:GetRobotAsset>
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean" />
                                  </ui:RetryScope.Condition>
                                </ui:RetryScope>
                                <Assign DisplayName="Assign - Insert assert into dict" sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[out_dictionary(asset.Name)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[assetValue]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="422,21" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Throw DisplayName="Throw BRE: Asset not found" Exception="[new BusinessRuleException(String.Format(&quot;Could not load asset {0} during dictionary initialization.&quot;,{asset.Name}))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_13" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </If.Then>
                        <If.Else>
                          <Throw DisplayName="Throw BRE: Duplicate Key - asset" Exception="[new BusinessRuleException(&quot;Key already exist on dictionary. Key: &quot; + asset.Name )]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_14" />
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </FlowStep>
            </FlowSwitch>
            <x:Reference>__ReferenceID0</x:Reference>
            <x:Reference>__ReferenceID1</x:Reference>
            <x:Reference>__ReferenceID2</x:Reference>
          </Flowchart>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>